//****************************************************************************************************  
//*----------------Copyright (c) 2016 C-L-G.FPGA1988.Roger Wang. All rights reserved------------------
//
//                   --              It to be define                --
//                   --                    ...                      --
//                   --                    ...                      --
//                   --                    ...                      --
//**************************************************************************************************** 
//File Information
//**************************************************************************************************** 
//File Name      : sys_led_module.v 
//Project Name   : gt0000
//Description    : The system led ctrl module.
//Github Address : https://github.com/C-L-G/gt0000/trunk/ic/digital/rtl/sys_aux_module/sys_led_module.v
//License        : CPL
//**************************************************************************************************** 
//Version Information
//**************************************************************************************************** 
//Create Date    : 29-08-2016 17:00(1th Fri,July,2016)
//First Author   : Roger Wang
//Modify Date    : 29-08-2016 14:20(1th Sun,July,2016)
//Last Author    : Roger Wang
//Version Number : 001   
//Last Commit    : 29-08-2016 14:30(1th Sun,July,2016)
//**************************************************************************************************** 
//Change History(latest change first)
//dd.mm.yyyy - Author - Your log of change
//**************************************************************************************************** 
//29.08.2016 - Roger Wang - Add the led control logic.
//29.08.2016 - Roger Wang - The initial version.
//*---------------------------------------------------------------------------------------------------
`timescale 1ns/1ps
module sys_led_module(
    led_clk             ,//01   In
    led_rst_n           ,//01   In
    led_in              ,//01   In
    led_out              //08   Out
);

    //************************************************************************************************
    // 1.Parameter and constant define
    //************************************************************************************************    
    
    
    //************************************************************************************************
    // 2.input and output declaration
    //************************************************************************************************
    input               led_clk     ;//the led module clk = 20MHz
    input               led_rst_n   ;//the led module reset,low active
    input   [07:00]     led_in      ;//the led module data input signals
    output  [07:00]     led_out     ;//the led module data output signals
    
    //************************************************************************************************
    // 3.Register and wire declaration
    //************************************************************************************************
    
    //------------------------------------------------------------------------------------------------
    // 3.1 the system led module wire
    //------------------------------------------------------------------------------------------------
    
    reg     [09:00]     led_cnt     ;//led count
    wire                led_clk     ;
    wire                led_rst_n   ;
    wire    [07:00]     led_in      ;
    wire    [07:00]     led_out     ;

    //************************************************************************************************
    // 4.Main code
    //************************************************************************************************
    //------------------------------------------------------------------------------------------------
    // 4.1 the led ctrl logic
    //------------------------------------------------------------------------------------------------
    always @(posedge led_clk or negedge led_rst_n) begin : SYS_LED_CTRL
        if(!led_rst_n)
            begin
                led_cnt     <= 'd0;
            end
        else
            begin
                led_cnt     <= led_cnt + 1'b1;
            end   
    end
    
    assign  led_out[00] = &led_in       ;
    assign  led_out[01] = |led_in       ;
    assign  led_out[02] = ~&led_in      ;
    assign  led_out[03] = ~|led_in      ;
    assign  led_out[04] = led_cnt[06]   ;
    assign  led_out[05] = led_cnt[07]   ;
    assign  led_out[06] = led_cnt[08]   ;
    assign  led_out[07] = led_cnt[09]   ;
    
    //------------------------------------------------------------------------------------------------
    // 4.2 the xxx module assignment
    //------------------------------------------------------------------------------------------------
    
    
    //************************************************************************************************
    // 5.Sub module instantiation
    //************************************************************************************************
    //------------------------------------------------------------------------------------------------
    // 5.1 the xxx module
    //------------------------------------------------------------------------------------------------    
    
    //------------------------------------------------------------------------------------------------
    // 5.2 the xxx module
    //------------------------------------------------------------------------------------------------   
    
    //------------------------------------------------------------------------------------------------
    // 5.3 the xxx module
    //------------------------------------------------------------------------------------------------

    
endmodule    
//****************************************************************************************************
//End of Mopdule
//****************************************************************************************************
    
    
    
   
