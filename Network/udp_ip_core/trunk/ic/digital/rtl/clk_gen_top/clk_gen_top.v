//****************************************************************************************************  
//*----------------Copyright (c) 2016 C-L-G.FPGA1988.Roger Wang. All rights reserved------------------
//
//                   --              It to be define                --
//                   --                    ...                      --
//                   --                    ...                      --
//                   --                    ...                      --
//**************************************************************************************************** 
//File Information
//**************************************************************************************************** 
//File Name      : clk_gen_module.v 
//Project Name   : gt0000
//Description    : The system auxiliary module.
//Github Address : https://github.com/C-L-G/gt0000/trunk/ic/digital/rtl/clk_gen_module/clk_gen_module.v
//License        : CPL
//**************************************************************************************************** 
//Version Information
//**************************************************************************************************** 
//Create Date    : 29-08-2016 17:00(1th Fri,July,2016)
//First Author   : Roger Wang
//Modify Date    : 02-09-2016 14:20(1th Sun,July,2016)
//Last Author    : Roger Wang
//Version Number : 002  
//Last Commit    : 02-09-2016 14:30(1th Sun,July,2016)
//**************************************************************************************************** 
//Change History(latest change first)
//dd.mm.yyyy - Author - Your log of change
//**************************************************************************************************** 
//02.09.2016 - Roger Wang - Add the glitch free clock switch module/div_module and clk gated module.
//29.08.2016 - Roger Wang - Add the led control module.
//29.08.2016 - Roger Wang - The initial version.
//*---------------------------------------------------------------------------------------------------
`timescale 1ns/1ps
module clk_gen_top(
    clk                 ,//01   In
    rst_n               ,//01   In
	div_2_clk           ,//01   Out
    div_4_clk           ,//01   Out
    clk_en              ,//01   In
    clk_sel             ,//01   In
    sw_clk              ,//01   Out
    gated_clk            //01   Out
);

    //************************************************************************************************
    // 1.Parameter and constant define
    //************************************************************************************************
    
    
    //************************************************************************************************
    // 2.input and output declaration
    //************************************************************************************************
    input               clk         ;//the clk = 200MHz
    input               rst_n       ;//the reset,low active
    output              div_2_clk   ;//the div 2 clock = 100MHz
    output              div_4_clk   ;//the div 4 clock = 50MHz
    input               clk_en      ;//the clock enable
    input               clk_sel     ;//the clock select
    output              sw_clk      ;//the selected clock
    output              gated_clk   ;//the gated clock
    
    //************************************************************************************************
    // 3.Register and wire declaration
    //************************************************************************************************
    
    //------------------------------------------------------------------------------------------------
    // 3.1 the system led module wire
    //------------------------------------------------------------------------------------------------    
    reg     [01:00]     clk_div_cnt     ;//led count
    reg                 clk_en_reg      ;//register the clock enable

    //************************************************************************************************
    // 4.Main code
    //************************************************************************************************
    //------------------------------------------------------------------------------------------------
    // 4.1 the xxx module assignment
    //------------------------------------------------------------------------------------------------
    
    //************************************************************************************************
    // 5.Sub module instantiation
    //************************************************************************************************
    
    //------------------------------------------------------------------------------------------------
    // 5.1 the clock div module
    //------------------------------------------------------------------------------------------------    
    clk_div_module clk_div_inst(
        .src_clk    (clk        ),//01  In
        .div_rst_n  (rst_n      ),//01  Out
        .div_clk_0  (div_2_clk  ),//01  Out
        .div_clk_1  (div_4_clk  ) //01  Out
    );

    //------------------------------------------------------------------------------------------------
    // 5.2 the gated clock module
    //------------------------------------------------------------------------------------------------    
    clk_gated_module clk_gated_inst(
        .src_clk    (clk        ),//01  In
        .clk_en     (clk_en     ),//01  In
        .gated_clk  (gated_clk  ) //01  Out
    );     

    //------------------------------------------------------------------------------------------------
    // 5.3 the glitch free clock switch module
    //------------------------------------------------------------------------------------------------    
    clk_switch_module clk_switch_inst(
        .clk_0      (div_2_clk  ),
        .clk_1      (div_4_clk  ),
        .sel        (clk_sel    ),
        .clk_o      (sw_clk     )
    );
    
    //------------------------------------------------------------------------------------------------
    // 5.4 the xxx module
    //------------------------------------------------------------------------------------------------   

    
    //------------------------------------------------------------------------------------------------
    // 5.5 the xxx module
    //------------------------------------------------------------------------------------------------

    
endmodule    
//****************************************************************************************************
//End of Mopdule
//****************************************************************************************************
    
    
    
   
